This is documentation for ASP developers about how set up a Linux
virtual machine and build ASP and its dependencies inside of
it. A virtual machine makes it easier work on a desired OS version and
to install third-party libraries.

We use KVM to manage virtual machines. The system administrators
need to have it installed on the host machine. 

It is suggested that the virtual machine (the guest) to be used for
building ASP be reasonably old, so that the shipped ASP build works on
as many machines as possible. Here is an example of installing Cent OS
6.0 as a guest.

wget https://archive.org/download/centos-6.0_release/CentOS-6.0-x86_64-bin-DVD1.iso
mkdir -p ~/projects/libvrt
fallocate -l 70000M ~/projects/libvrt/centos-6.0.img
virt-install -r 8192 --accelerate -n centos-6.0 -f ~/projects/libvrt/centos-6.0.img --cdrom CentOS-6.0-x86_64-bin-DVD1.iso  --vcpus=8 --vnc --vncport=5950

Note that for CentOS minor versions are very fluid. This OS will
quickly upgrade itself to the latest minor version, so it may end up
as version 6.8 instead of 6.0 for example.

CentOS arbtrarily partitions the hard drive using LVM into home and
root drives, which makes it hard to use the storage efficiently. That
should be disabled, or otherwise more storage can be pre-allocated, or
the build can be built partially in /home and partially in /.

Also, CentOS does not start the network on boot, that can be rectified by running:

sudo sed -i -e 's@^ONBOOT="no@ONBOOT="yes@' /etc/sysconfig/network-scripts/ifcfg-eth0

and rebooting. Or, for the current session, with:

  ifup eth0

To open a GUI in the machine, use either:

  vncviewer localhost:5950

(the same VNC port used when the machine was created), or 

  virt-viewer centos-6.0

Use

  virsh list --all 

to view the guests, 

  virsh destroy <machine> 

to force shutting down the guest, and 

  virsh undefine <guest> 

followed by 

  rm -rf ~/projects/libvrt 

to wipe any trace of all guest machines (use with extreme care!).

A connection from the host to a guest can be done by reverse port 
forwarding (there should be a better way). 

Here is an example:

ssh -f -N HOSTUSER@HOST -R 6000:localhost:22

Then, from HOST, one should be able to connect to the guest via:

  ssh localhost -p 6000 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l GUESTUSER

The sshd daemon may need to be installed or restarted on the guest,
and the guest must be configured to allow incoming ssh connections. If
the following lines are added to HOST's .ssh/config:

Host GUEST
  Hostname localhost
  HostKeyAlias GUEST
  CheckHostIP no
  Port 6000
  User GUESTUSER

then one should be able to connect to the guest simply by running 
ssh GUEST. 

Occasionally a port may become unavailable, and hence will need to be changed.

Note that the network speed between HOST and GUEST can be very
slow. It can be greatly sped up using virtio. This can be done as
follows:

Shut down the machine, then dump and edit an xml file:

virsh undefine centos-6.0
virsh dumpxml centos-6.0 > centos-6.0.xml
vim centos-6.0.xml

Under the line

 <mac address='...'/> 

add the line:

 <model type='virtio'/>   

Save this file and exit. Then run:

virsh create centos-6.0.xml

and restart the machine. 

Also, the number of CPUs and RAM for GUEST can be changed each time
before starting it by again editing the xml file.

To allow the user to use sudo to install packages, follow the instructions at:

https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux_OpenStack_Platform/2/html/Getting_Started_Guide/ch02s03.html        

If the development tools on CentOS are old, they can be updated by
using devtoolset-3:

sudo yum -y install centos-release-scl

sudo yum -y install devtoolset-3-gcc devtoolset-3-gcc-c++ devtoolset-3-gcc-gfortran

After the new tools are installed, run:

scl enable devtoolset-3 bash

The path to the new compilers, e.g., /opt/rh/devtoolset-3/root/usr/bin,
can be saved so that in the future one need not invoke scl each time. 

See INSTALLGUIDE for how to continue the installation of dependencies
and building ASP.
